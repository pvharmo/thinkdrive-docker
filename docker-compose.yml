# Use postgres/example user/password credentials
version: '3.9'

services:
  db:
    image: postgres
    volumes:
      - db-data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: example
      POSTGRES_DB: thinkdrive
    ports:
      - 5432:5432

  adminer:
    image: adminer
    ports:
      - 8081:8080

  storage:
    image: minio/minio
    volumes:
      - storage-data1:/data1
      # - storage-data2:/data2
      # - storage-data3:/data3
      # - storage-data4:/data4
    environment:
      MINIO_ROOT_USER: admin
      MINIO_ROOT_PASSWORD: password
    ports:
      - '9000:9000'
    entrypoint: sh
    command: -c 'mkdir -p /data/thinkdrive && /usr/bin/minio server /data{1...4}'

  kratos-migrate:
    depends_on:
      - db
    image: oryd/kratos:v0.7.1-alpha.1
    environment:
      - DSN=postgres://admin:example@db:5432/thinkdrive?sslmode=disable&max_conns=20&max_idle_conns=4
    volumes:
      - type: bind
        source: ./kratos
        target: /etc/config/kratos
    command: -c /etc/config/kratos/kratos.yml migrate sql -e --yes
    restart: on-failure
    logging:
      driver: none


  kratos:
    depends_on:
      - kratos-migrate
    image: oryd/kratos:v0.7.1-alpha.1
    ports:
      - '4433:4433' # public
      - '4434:4434' # admin
    environment:
      - DSN=postgres://admin:example@db:5432/thinkdrive?sslmode=disable&max_conns=20&max_idle_conns=4
      - LOG_LEVEL=trace
    command: serve -c /etc/config/kratos/kratos.yml --dev --watch-courier
    volumes:
      - type: bind
        source: ./kratos
        target: /etc/config/kratos

  mailslurper:
    image: oryd/mailslurper:latest-smtps
    ports:
      - '4436:4436'
      - '4437:4437'

  oathkeeper:
    image: oryd/oathkeeper:v0.38
    depends_on:
      - kratos
    ports:
      - 80:4455
      - 4456:4456
    command: serve proxy -c "/etc/config/oathkeeper/oathkeeper.yml"
    environment:
      - LOG_LEVEL=debug
      - LOG_LEAK_SENSITIVE_VALUES=true
    restart: on-failure
    volumes:
      - ./oathkeeper:/etc/config/oathkeeper

  keto:
    image: oryd/keto:v0.6.0-alpha.3
    depends_on:
      - keto-migrate
    ports:
      - '4466:4466'
      - '4467:4467'
    command: serve -c /etc/config/keto/keto.yml all
    restart: on-failure
    environment:
      DSN: postgres://admin:example@db:5432/authorization?sslmode=disable&max_conns=20&max_idle_conns=4
      LOG_LEVEL: debug
      LOG_LEAK_SENSITIVE_VALUES: "true"
      KETO_READ_REMOTE: keto:4466
    volumes:
      -
        type: bind
        source: ./keto
        target: /etc/config/keto

  keto-migrate:
    image: oryd/keto:v0.6.0-alpha.3
    depends_on:
      - db
    environment:
      KETO_WRITE_REMOTE: keto:4467
      DSN: postgres://admin:example@db:5432/authorization?sslmode=disable&max_conns=20&max_idle_conns=4
    volumes:
      - type: bind
        source: ./keto
        target: /etc/config/keto
    command:
      migrate up --all-namespaces -c /etc/config/keto/keto.yml --yes
    restart: on-failure

volumes:
  db-data:
  storage-data1:
  storage-data2:
  storage-data3:
  storage-data4:
